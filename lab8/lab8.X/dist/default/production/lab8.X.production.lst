

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 19 17:55:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008F                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     0105                     	;# 
   125     0107                     	;# 
   126     0108                     	;# 
   127     0109                     	;# 
   128     010C                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0185                     	;# 
   134     0187                     	;# 
   135     0188                     	;# 
   136     0189                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     008F                     	;# 
   184     0090                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0096                     	;# 
   193     0097                     	;# 
   194     0098                     	;# 
   195     0099                     	;# 
   196     009A                     	;# 
   197     009B                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     0105                     	;# 
   203     0107                     	;# 
   204     0108                     	;# 
   205     0109                     	;# 
   206     010C                     	;# 
   207     010C                     	;# 
   208     010D                     	;# 
   209     010E                     	;# 
   210     010F                     	;# 
   211     0185                     	;# 
   212     0187                     	;# 
   213     0188                     	;# 
   214     0189                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217                           
   218                           	psect	idataBANK0
   219     0405                     __pidataBANK0:
   220                           
   221                           ;initializer for _cont
   222     0405  3401               	retlw	1
   223     0406  3400               	retlw	0
   224                           
   225                           	psect	strings
   226     0232                     __pstrings:
   227     0232                     stringtab:
   228     0232                     __stringtab:
   229     0232                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232     0232                     stringdir:
   233     0232  3002               	movlw	high stringdir
   234     0233  008A               	movwf	10
   235     0234  0804               	movf	4,w
   236     0235  0A84               	incf	4,f
   237     0236  0782               	addwf	2,f
   238     0237                     __stringbase:
   239     0237  3400               	retlw	0
   240     0238                     __end_of__stringtab:
   241     0238                     _data:
   242     0238  3468               	retlw	104
   243     0239  3465               	retlw	101
   244     023A  346C               	retlw	108
   245     023B  346C               	retlw	108
   246     023C  346F               	retlw	111
   247     023D  3420               	retlw	32
   248     023E  3477               	retlw	119
   249     023F  346F               	retlw	111
   250     0240  3472               	retlw	114
   251     0241  346C               	retlw	108
   252     0242  3464               	retlw	100
   253     0243  3400               	retlw	0
   254     0244                     __end_of_data:
   255     000B                     _INTCONbits	set	11
   256     0018                     _RCSTAbits	set	24
   257     001F                     _ADCON0bits	set	31
   258     001E                     _ADRESH	set	30
   259     0006                     _PORTB	set	6
   260     001A                     _RCREG	set	26
   261     0019                     _TXREG	set	25
   262     000C                     _PIR1bits	set	12
   263     0066                     _ADIF	set	102
   264     0065                     _RCIF	set	101
   265     008C                     _PIE1bits	set	140
   266     009A                     _SPBRGH	set	154
   267     0099                     _SPBRG	set	153
   268     0098                     _TXSTAbits	set	152
   269     009F                     _ADCON1bits	set	159
   270     008F                     _OSCCONbits	set	143
   271     0086                     _TRISB	set	134
   272     0085                     _TRISA	set	133
   273     0187                     _BAUDCTLbits	set	391
   274     0189                     _ANSELH	set	393
   275     0188                     _ANSEL	set	392
   276     0244                     STR_3:
   277     0244  3432               	retlw	50	;'2'
   278     0245  342E               	retlw	46	;'.'
   279     0246  3420               	retlw	32	;' '
   280     0247  3445               	retlw	69	;'E'
   281     0248  346E               	retlw	110	;'n'
   282     0249  3476               	retlw	118	;'v'
   283     024A  3469               	retlw	105	;'i'
   284     024B  3461               	retlw	97	;'a'
   285     024C  3472               	retlw	114	;'r'
   286     024D  3420               	retlw	32	;' '
   287     024E  3441               	retlw	65	;'A'
   288     024F  3453               	retlw	83	;'S'
   289     0250  3443               	retlw	67	;'C'
   290     0251  3449               	retlw	73	;'I'
   291     0252  3449               	retlw	73	;'I'
   292     0253  342C               	retlw	44	;','
   293     0254  3420               	retlw	32	;' '
   294     0255  3469               	retlw	105	;'i'
   295     0256  346E               	retlw	110	;'n'
   296     0257  3467               	retlw	103	;'g'
   297     0258  3472               	retlw	114	;'r'
   298     0259  3465               	retlw	101	;'e'
   299     025A  3473               	retlw	115	;'s'
   300     025B  3465               	retlw	101	;'e'
   301     025C  3420               	retlw	32	;' '
   302     025D  346F               	retlw	111	;'o'
   303     025E  3400               	retlw	0
   304     025F                     STR_2:
   305     025F  3431               	retlw	49	;'1'
   306     0260  342E               	retlw	46	;'.'
   307     0261  3420               	retlw	32	;' '
   308     0262  344C               	retlw	76	;'L'
   309     0263  3465               	retlw	101	;'e'
   310     0264  3465               	retlw	101	;'e'
   311     0265  3472               	retlw	114	;'r'
   312     0266  3420               	retlw	32	;' '
   313     0267  3450               	retlw	80	;'P'
   314     0268  344F               	retlw	79	;'O'
   315     0269  3454               	retlw	84	;'T'
   316     026A  342C               	retlw	44	;','
   317     026B  3420               	retlw	32	;' '
   318     026C  3469               	retlw	105	;'i'
   319     026D  346E               	retlw	110	;'n'
   320     026E  3467               	retlw	103	;'g'
   321     026F  3472               	retlw	114	;'r'
   322     0270  3465               	retlw	101	;'e'
   323     0271  3473               	retlw	115	;'s'
   324     0272  3465               	retlw	101	;'e'
   325     0273  3420               	retlw	32	;' '
   326     0274  3478               	retlw	120	;'x'
   327     0275  3400               	retlw	0
   328     0276                     STR_1:
   329     0276  3469               	retlw	105	;'i'
   330     0277  346E               	retlw	110	;'n'
   331     0278  3467               	retlw	103	;'g'
   332     0279  3472               	retlw	114	;'r'
   333     027A  3465               	retlw	101	;'e'
   334     027B  3473               	retlw	115	;'s'
   335     027C  3465               	retlw	101	;'e'
   336     027D  3420               	retlw	32	;' '
   337     027E  3475               	retlw	117	;'u'
   338     027F  346E               	retlw	110	;'n'
   339     0280  3420               	retlw	32	;' '
   340     0281  3463               	retlw	99	;'c'
   341     0282  3461               	retlw	97	;'a'
   342     0283  3472               	retlw	114	;'r'
   343     0284  3461               	retlw	97	;'a'
   344     0285  3463               	retlw	99	;'c'
   345     0286  3474               	retlw	116	;'t'
   346     0287  3465               	retlw	101	;'e'
   347     0288  3472               	retlw	114	;'r'
   348     0289  343A               	retlw	58	;':'
   349     028A  3420               	retlw	32	;' '
   350     028B  3400               	retlw	0
   351                           
   352                           	psect	cinit
   353     0015                     start_initialization:	
   354                           ; #config settings
   355                           
   356     0015                     __initialization:
   357                           
   358                           ; Initialize objects allocated to BANK0
   359     0015  120A  118A  2405  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   360     001A  00C3               	movwf	__pdataBANK0& (0+127)
   361     001B  120A  118A  2406  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   362     0020  00C4               	movwf	(__pdataBANK0+1)& (0+127)
   363                           
   364                           ; Clear objects allocated to BANK0
   365     0021  01BD               	clrf	__pbssBANK0& (0+127)
   366     0022  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   367     0023  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   368     0024  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   369     0025  01C1               	clrf	(__pbssBANK0+4)& (0+127)
   370     0026  01C2               	clrf	(__pbssBANK0+5)& (0+127)
   371                           
   372                           ; Clear objects allocated to COMMON
   373     0027  01FC               	clrf	__pbssCOMMON& (0+127)
   374     0028  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   375     0029                     end_of_initialization:	
   376                           ;End of C runtime variable initialization code
   377                           
   378     0029                     __end_of__initialization:
   379     0029  0183               	clrf	3
   380     002A  120A  118A  2AE5   	ljmp	_main	;jump to C main() function
   381                           
   382                           	psect	bssCOMMON
   383     007C                     __pbssCOMMON:
   384     007C                     _y:
   385     007C                     	ds	2
   386                           
   387                           	psect	bssBANK0
   388     003D                     __pbssBANK0:
   389     003D                     _u:
   390     003D                     	ds	2
   391     003F                     _d:
   392     003F                     	ds	2
   393     0041                     _c:
   394     0041                     	ds	2
   395                           
   396                           	psect	dataBANK0
   397     0043                     __pdataBANK0:
   398     0043                     _cont:
   399     0043                     	ds	2
   400                           
   401                           	psect	cstackCOMMON
   402     0070                     __pcstackCOMMON:
   403     0070                     ?_cadena:
   404     0070                     ?_setup:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_isr:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?i1_cadena:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ??i1_cadena:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_asciiNUM:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?_main:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     ?___awmod:	
   423                           ; 2 bytes @ 0x0
   424                           
   425     0070                     asciiNUM@a:	
   426                           ; 2 bytes @ 0x0
   427                           
   428     0070                     ___awmod@divisor:	
   429                           ; 2 bytes @ 0x0
   430                           
   431                           
   432                           ; 2 bytes @ 0x0
   433     0070                     	ds	2
   434     0072                     ??_asciiNUM:
   435     0072                     i1cadena@txt:	
   436                           ; 1 bytes @ 0x2
   437                           
   438     0072                     ___awmod@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441                           
   442                           ; 2 bytes @ 0x2
   443     0072                     	ds	1
   444     0073                     i1cadena@cont0:
   445                           
   446                           ; 2 bytes @ 0x3
   447     0073                     	ds	1
   448     0074                     ??___awmod:
   449                           
   450                           ; 1 bytes @ 0x4
   451     0074                     	ds	1
   452     0075                     ___awmod@counter:
   453     0075                     i1cadena@i:	
   454                           ; 1 bytes @ 0x5
   455                           
   456                           
   457                           ; 2 bytes @ 0x5
   458     0075                     	ds	1
   459     0076                     ___awmod@sign:
   460                           
   461                           ; 1 bytes @ 0x6
   462     0076                     	ds	1
   463     0077                     ?___awdiv:
   464     0077                     ___awdiv@divisor:	
   465                           ; 2 bytes @ 0x7
   466                           
   467                           
   468                           ; 2 bytes @ 0x7
   469     0077                     	ds	2
   470     0079                     ___awdiv@dividend:
   471                           
   472                           ; 2 bytes @ 0x9
   473     0079                     	ds	2
   474     007B                     ??___awdiv:
   475                           
   476                           ; 1 bytes @ 0xB
   477     007B                     	ds	1
   478     007C                     ??_asciiCDU:
   479                           
   480                           	psect	cstackBANK0
   481     0020                     __pcstackBANK0:	
   482                           ; 1 bytes @ 0xC
   483                           
   484     0020                     ___awdiv@counter:
   485                           
   486                           ; 1 bytes @ 0x0
   487     0020                     	ds	1
   488     0021                     ___awdiv@sign:
   489                           
   490                           ; 1 bytes @ 0x1
   491     0021                     	ds	1
   492     0022                     ___awdiv@quotient:
   493                           
   494                           ; 2 bytes @ 0x2
   495     0022                     	ds	2
   496     0024                     ?_asciiCDU:
   497     0024                     asciiCDU@x:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 2 bytes @ 0x4
   502     0024                     	ds	2
   503     0026                     asciiCDU@centenas:
   504                           
   505                           ; 2 bytes @ 0x6
   506     0026                     	ds	2
   507     0028                     asciiCDU@decenas:
   508                           
   509                           ; 2 bytes @ 0x8
   510     0028                     	ds	2
   511     002A                     asciiCDU@unidades:
   512                           
   513                           ; 2 bytes @ 0xA
   514     002A                     	ds	2
   515     002C                     _asciiCDU$998:
   516                           
   517                           ; 2 bytes @ 0xC
   518     002C                     	ds	2
   519     002E                     ??_isr:
   520                           
   521                           ; 1 bytes @ 0xE
   522     002E                     	ds	6
   523     0034                     ??_cadena:
   524     0034                     ??_setup:	
   525                           ; 1 bytes @ 0x14
   526                           
   527                           
   528                           ; 1 bytes @ 0x14
   529     0034                     	ds	2
   530     0036                     cadena@cont0:
   531                           
   532                           ; 2 bytes @ 0x16
   533     0036                     	ds	2
   534     0038                     cadena@i:
   535                           
   536                           ; 2 bytes @ 0x18
   537     0038                     	ds	2
   538     003A                     cadena@txt:
   539                           
   540                           ; 1 bytes @ 0x1A
   541     003A                     	ds	1
   542     003B                     ??_main:
   543                           
   544                           ; 1 bytes @ 0x1B
   545     003B                     	ds	2
   546                           
   547                           	psect	maintext
   548     02E5                     __pmaintext:	
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 86 in file "prelablab8.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  2   80[None  ] int 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : B00/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       2       0       0       0
   571 ;;      Totals:         0       2       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels required when called: 4
   574 ;; This function calls:
   575 ;;		_cadena
   576 ;;		_setup
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582     02E5                     _main:	
   583                           ;psect for function _main
   584                           
   585     02E5                     l1310:	
   586                           ;incstack = 0
   587                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;prelablab8.c: 87:     setup();
   591     02E5  120A  118A  2330  120A  118A  	fcall	_setup
   592     02EA                     l1312:
   593                           
   594                           ;prelablab8.c: 90:         _delay((unsigned long)((50)*(1000000/4000.0)));
   595     02EA  3011               	movlw	17
   596     02EB  1283               	bcf	3,5	;RP0=0, select bank0
   597     02EC  1303               	bcf	3,6	;RP1=0, select bank0
   598     02ED  00BC               	movwf	??_main+1
   599     02EE  3039               	movlw	57
   600     02EF  00BB               	movwf	??_main
   601     02F0                     u637:
   602     02F0  0BBB               	decfsz	??_main,f
   603     02F1  2AF0               	goto	u637
   604     02F2  0BBC               	decfsz	??_main+1,f
   605     02F3  2AF0               	goto	u637
   606     02F4  2AF5               	nop2
   607     02F5                     l1314:
   608                           
   609                           ;prelablab8.c: 91:         if(PIR1bits.TXIF){
   610     02F5  1283               	bcf	3,5	;RP0=0, select bank0
   611     02F6  1303               	bcf	3,6	;RP1=0, select bank0
   612     02F7  1E0C               	btfss	12,4	;volatile
   613     02F8  2AFA               	goto	u601
   614     02F9  2AFB               	goto	u600
   615     02FA                     u601:
   616     02FA  2B17               	goto	l1326
   617     02FB                     u600:
   618     02FB                     l1316:
   619                           
   620                           ;prelablab8.c: 92:             if(cont == 1){
   621     02FB  0343               	decf	_cont,w
   622     02FC  0444               	iorwf	_cont+1,w
   623     02FD  1D03               	btfss	3,2
   624     02FE  2B00               	goto	u611
   625     02FF  2B01               	goto	u610
   626     0300                     u611:
   627     0300  2B17               	goto	l1326
   628     0301                     u610:
   629     0301                     l1318:
   630                           
   631                           ;prelablab8.c: 93:                 cadena("1. Leer POT, ingrese x");
   632     0301  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   633     0302  120A  118A  237B  120A  118A  	fcall	_cadena
   634     0307                     l1320:
   635                           
   636                           ;prelablab8.c: 94:                 TXREG = '\r';
   637     0307  300D               	movlw	13
   638     0308  1283               	bcf	3,5	;RP0=0, select bank0
   639     0309  1303               	bcf	3,6	;RP1=0, select bank0
   640     030A  0099               	movwf	25	;volatile
   641     030B                     l1322:
   642                           
   643                           ;prelablab8.c: 95:                 cadena("2. Enviar ASCII, ingrese o");
   644     030B  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   645     030C  120A  118A  237B  120A  118A  	fcall	_cadena
   646                           
   647                           ;prelablab8.c: 96:                 TXREG = '\r';
   648     0311  300D               	movlw	13
   649     0312  1283               	bcf	3,5	;RP0=0, select bank0
   650     0313  1303               	bcf	3,6	;RP1=0, select bank0
   651     0314  0099               	movwf	25	;volatile
   652     0315                     l1324:
   653                           
   654                           ;prelablab8.c: 97:                 cont = 0;
   655     0315  01C3               	clrf	_cont
   656     0316  01C4               	clrf	_cont+1
   657     0317                     l1326:
   658                           
   659                           ;prelablab8.c: 100:         ADCON0bits.CHS = 0b0010;
   660     0317  081F               	movf	31,w	;volatile
   661     0318  39C3               	andlw	-61
   662     0319  3808               	iorlw	8
   663     031A  009F               	movwf	31	;volatile
   664     031B                     l1328:
   665                           
   666                           ;prelablab8.c: 101:         if(ADCON0bits.GO == 0){
   667     031B  189F               	btfsc	31,1	;volatile
   668     031C  2B1E               	goto	u621
   669     031D  2B1F               	goto	u620
   670     031E                     u621:
   671     031E  2AEA               	goto	l1312
   672     031F                     u620:
   673     031F                     l1330:
   674                           
   675                           ;prelablab8.c: 102:             _delay((unsigned long)((10)*(1000000/4000.0)));
   676     031F  3004               	movlw	4
   677     0320  1283               	bcf	3,5	;RP0=0, select bank0
   678     0321  1303               	bcf	3,6	;RP1=0, select bank0
   679     0322  00BC               	movwf	??_main+1
   680     0323  303D               	movlw	61
   681     0324  00BB               	movwf	??_main
   682     0325                     u647:
   683     0325  0BBB               	decfsz	??_main,f
   684     0326  2B25               	goto	u647
   685     0327  0BBC               	decfsz	??_main+1,f
   686     0328  2B25               	goto	u647
   687     0329                     l1332:
   688                           
   689                           ;prelablab8.c: 103:             ADCON0bits.GO = 1;
   690     0329  1283               	bcf	3,5	;RP0=0, select bank0
   691     032A  1303               	bcf	3,6	;RP1=0, select bank0
   692     032B  149F               	bsf	31,1	;volatile
   693     032C  2AEA               	goto	l1312
   694     032D  120A  118A  2812   	ljmp	start
   695     0330                     __end_of_main:
   696                           
   697                           	psect	text1
   698     0330                     __ptext1:	
   699 ;; *************** function _setup *****************
   700 ;; Defined at:
   701 ;;		line 109 in file "prelablab8.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       1       0       0       0
   718 ;;      Totals:         0       1       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 3
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     0330                     _setup:	
   730                           ;psect for function _setup
   731                           
   732     0330                     l1194:	
   733                           ;incstack = 0
   734                           ; Regs used in _setup: [wreg+status,2+status,0]
   735                           
   736                           
   737                           ;prelablab8.c: 110:     ANSEL = 0b00000100;
   738     0330  3004               	movlw	4
   739     0331  1683               	bsf	3,5	;RP0=1, select bank3
   740     0332  1703               	bsf	3,6	;RP1=1, select bank3
   741     0333  0088               	movwf	8	;volatile
   742     0334                     l1196:
   743                           
   744                           ;prelablab8.c: 111:     ANSELH = 0;
   745     0334  0189               	clrf	9	;volatile
   746     0335                     l1198:
   747                           
   748                           ;prelablab8.c: 113:     TRISA = 0b00000100;
   749     0335  3004               	movlw	4
   750     0336  1683               	bsf	3,5	;RP0=1, select bank1
   751     0337  1303               	bcf	3,6	;RP1=0, select bank1
   752     0338  0085               	movwf	5	;volatile
   753                           
   754                           ;prelablab8.c: 114:     TRISB = 0;
   755     0339  0186               	clrf	6	;volatile
   756                           
   757                           ;prelablab8.c: 115:     PORTB = 0x00;
   758     033A  1283               	bcf	3,5	;RP0=0, select bank0
   759     033B  1303               	bcf	3,6	;RP1=0, select bank0
   760     033C  0186               	clrf	6	;volatile
   761     033D                     l1200:
   762                           
   763                           ;prelablab8.c: 117:     OSCCONbits.IRCF = 0b100;
   764     033D  1683               	bsf	3,5	;RP0=1, select bank1
   765     033E  1303               	bcf	3,6	;RP1=0, select bank1
   766     033F  080F               	movf	15,w	;volatile
   767     0340  398F               	andlw	-113
   768     0341  3840               	iorlw	64
   769     0342  008F               	movwf	15	;volatile
   770     0343                     l1202:
   771                           
   772                           ;prelablab8.c: 118:     OSCCONbits.SCS = 1;
   773     0343  140F               	bsf	15,0	;volatile
   774     0344                     l1204:
   775                           
   776                           ;prelablab8.c: 121:     ADCON1bits.ADFM = 0;
   777     0344  139F               	bcf	31,7	;volatile
   778     0345                     l1206:
   779                           
   780                           ;prelablab8.c: 122:     ADCON1bits.VCFG0 = 0;
   781     0345  121F               	bcf	31,4	;volatile
   782     0346                     l1208:
   783                           
   784                           ;prelablab8.c: 123:     ADCON1bits.VCFG1 = 0;
   785     0346  129F               	bcf	31,5	;volatile
   786     0347                     l1210:
   787                           
   788                           ;prelablab8.c: 125:     ADCON0bits.ADCS = 0b10;
   789     0347  1283               	bcf	3,5	;RP0=0, select bank0
   790     0348  1303               	bcf	3,6	;RP1=0, select bank0
   791     0349  081F               	movf	31,w	;volatile
   792     034A  393F               	andlw	-193
   793     034B  3880               	iorlw	128
   794     034C  009F               	movwf	31	;volatile
   795     034D                     l1212:
   796                           
   797                           ;prelablab8.c: 126:     ADCON0bits.CHS = 0b0010;
   798     034D  081F               	movf	31,w	;volatile
   799     034E  39C3               	andlw	-61
   800     034F  3808               	iorlw	8
   801     0350  009F               	movwf	31	;volatile
   802     0351                     l1214:
   803                           
   804                           ;prelablab8.c: 127:     ADCON0bits.ADON = 1;
   805     0351  141F               	bsf	31,0	;volatile
   806     0352                     l1216:
   807                           
   808                           ;prelablab8.c: 128:     _delay((unsigned long)((50)*(1000000/4000000.0)));
   809     0352  3003               	movlw	3
   810     0353  1283               	bcf	3,5	;RP0=0, select bank0
   811     0354  1303               	bcf	3,6	;RP1=0, select bank0
   812     0355  00B4               	movwf	??_setup
   813     0356                     u657:
   814     0356  0BB4               	decfsz	??_setup,f
   815     0357  2B56               	goto	u657
   816     0358                     l1218:
   817                           
   818                           ;prelablab8.c: 131:     TXSTAbits.SYNC = 0;
   819     0358  1683               	bsf	3,5	;RP0=1, select bank1
   820     0359  1303               	bcf	3,6	;RP1=0, select bank1
   821     035A  1218               	bcf	24,4	;volatile
   822     035B                     l1220:
   823                           
   824                           ;prelablab8.c: 132:     TXSTAbits.BRGH = 1;
   825     035B  1518               	bsf	24,2	;volatile
   826     035C                     l1222:
   827                           
   828                           ;prelablab8.c: 134:     BAUDCTLbits.BRG16 = 1;
   829     035C  1683               	bsf	3,5	;RP0=1, select bank3
   830     035D  1703               	bsf	3,6	;RP1=1, select bank3
   831     035E  1587               	bsf	7,3	;volatile
   832     035F                     l1224:
   833                           
   834                           ;prelablab8.c: 136:     SPBRG = 25;
   835     035F  3019               	movlw	25
   836     0360  1683               	bsf	3,5	;RP0=1, select bank1
   837     0361  1303               	bcf	3,6	;RP1=0, select bank1
   838     0362  0099               	movwf	25	;volatile
   839     0363                     l1226:
   840                           
   841                           ;prelablab8.c: 137:     SPBRGH = 0;
   842     0363  019A               	clrf	26	;volatile
   843     0364                     l1228:
   844                           
   845                           ;prelablab8.c: 139:     RCSTAbits.SPEN = 1;
   846     0364  1283               	bcf	3,5	;RP0=0, select bank0
   847     0365  1303               	bcf	3,6	;RP1=0, select bank0
   848     0366  1798               	bsf	24,7	;volatile
   849     0367                     l1230:
   850                           
   851                           ;prelablab8.c: 140:     RCSTAbits.RX9 = 0;
   852     0367  1318               	bcf	24,6	;volatile
   853     0368                     l1232:
   854                           
   855                           ;prelablab8.c: 141:     RCSTAbits.CREN = 1;
   856     0368  1618               	bsf	24,4	;volatile
   857     0369                     l1234:
   858                           
   859                           ;prelablab8.c: 143:     TXSTAbits.TXEN = 1;
   860     0369  1683               	bsf	3,5	;RP0=1, select bank1
   861     036A  1303               	bcf	3,6	;RP1=0, select bank1
   862     036B  1698               	bsf	24,5	;volatile
   863     036C                     l1236:
   864                           
   865                           ;prelablab8.c: 146:     PIR1bits.ADIF = 0;
   866     036C  1283               	bcf	3,5	;RP0=0, select bank0
   867     036D  1303               	bcf	3,6	;RP1=0, select bank0
   868     036E  130C               	bcf	12,6	;volatile
   869     036F                     l1238:
   870                           
   871                           ;prelablab8.c: 147:     PIE1bits.ADIE = 1;
   872     036F  1683               	bsf	3,5	;RP0=1, select bank1
   873     0370  1303               	bcf	3,6	;RP1=0, select bank1
   874     0371  170C               	bsf	12,6	;volatile
   875     0372                     l1240:
   876                           
   877                           ;prelablab8.c: 148:     PIR1bits.RCIF = 0;
   878     0372  1283               	bcf	3,5	;RP0=0, select bank0
   879     0373  1303               	bcf	3,6	;RP1=0, select bank0
   880     0374  128C               	bcf	12,5	;volatile
   881     0375                     l1242:
   882                           
   883                           ;prelablab8.c: 149:     PIE1bits.RCIE = 1;
   884     0375  1683               	bsf	3,5	;RP0=1, select bank1
   885     0376  1303               	bcf	3,6	;RP1=0, select bank1
   886     0377  168C               	bsf	12,5	;volatile
   887     0378                     l1244:
   888                           
   889                           ;prelablab8.c: 150:     INTCONbits.PEIE = 1;
   890     0378  170B               	bsf	11,6	;volatile
   891     0379                     l1246:
   892                           
   893                           ;prelablab8.c: 151:     INTCONbits.GIE = 1;
   894     0379  178B               	bsf	11,7	;volatile
   895     037A                     l90:
   896     037A  0008               	return
   897     037B                     __end_of_setup:
   898                           
   899                           	psect	text2
   900     037B                     __ptext2:	
   901 ;; *************** function _cadena *****************
   902 ;; Defined at:
   903 ;;		line 156 in file "prelablab8.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  txt             1    wreg     PTR unsigned char 
   906 ;;		 -> STR_3(27), STR_2(23), STR_1(22), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  txt             1   26[BANK0 ] PTR unsigned char 
   909 ;;		 -> STR_3(27), STR_2(23), STR_1(22), 
   910 ;;  i               2   24[BANK0 ] int 
   911 ;;  cont0           2   22[BANK0 ] int 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         0       5       0       0       0
   923 ;;      Temps:          0       2       0       0       0
   924 ;;      Totals:         0       7       0       0       0
   925 ;;Total ram usage:        7 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 3
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935     037B                     _cadena:	
   936                           ;psect for function _cadena
   937                           
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
   941                           ;cadena@txt stored from wreg
   942     037B  1283               	bcf	3,5	;RP0=0, select bank0
   943     037C  1303               	bcf	3,6	;RP1=0, select bank0
   944     037D  00BA               	movwf	cadena@txt
   945     037E                     l1178:
   946                           
   947                           ;prelablab8.c: 157:     int cont0 = 0;
   948     037E  01B6               	clrf	cadena@cont0
   949     037F  01B7               	clrf	cadena@cont0+1
   950                           
   951                           ;prelablab8.c: 158:     while(txt[cont0]!=0){
   952     0380  2B87               	goto	l1182
   953     0381                     l1180:
   954                           
   955                           ;prelablab8.c: 159:         cont0++;
   956     0381  3001               	movlw	1
   957     0382  07B6               	addwf	cadena@cont0,f
   958     0383  1803               	skipnc
   959     0384  0AB7               	incf	cadena@cont0+1,f
   960     0385  3000               	movlw	0
   961     0386  07B7               	addwf	cadena@cont0+1,f
   962     0387                     l1182:
   963                           
   964                           ;prelablab8.c: 158:     while(txt[cont0]!=0){
   965     0387  0836               	movf	cadena@cont0,w
   966     0388  073A               	addwf	cadena@txt,w
   967     0389  0084               	movwf	4
   968     038A  120A  118A  2232  120A  118A  	fcall	stringdir
   969     038F  3A00               	xorlw	0
   970     0390  1D03               	skipz
   971     0391  2B93               	goto	u511
   972     0392  2B94               	goto	u510
   973     0393                     u511:
   974     0393  2B81               	goto	l1180
   975     0394                     u510:
   976     0394                     l1184:
   977                           
   978                           ;prelablab8.c: 161:     for(int i = 0; i < cont0; i++){
   979     0394  01B8               	clrf	cadena@i
   980     0395  01B9               	clrf	cadena@i+1
   981     0396  2BB3               	goto	l1192
   982     0397                     l1186:
   983                           
   984                           ;prelablab8.c: 162:         _delay((unsigned long)((50)*(1000000/4000.0)));
   985     0397  3011               	movlw	17
   986     0398  1283               	bcf	3,5	;RP0=0, select bank0
   987     0399  1303               	bcf	3,6	;RP1=0, select bank0
   988     039A  00B5               	movwf	??_cadena+1
   989     039B  3039               	movlw	57
   990     039C  00B4               	movwf	??_cadena
   991     039D                     u667:
   992     039D  0BB4               	decfsz	??_cadena,f
   993     039E  2B9D               	goto	u667
   994     039F  0BB5               	decfsz	??_cadena+1,f
   995     03A0  2B9D               	goto	u667
   996     03A1  2BA2               	nop2
   997     03A2                     l1188:
   998                           
   999                           ;prelablab8.c: 163:         TXREG = txt[i];
  1000     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1001     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1002     03A4  0838               	movf	cadena@i,w
  1003     03A5  073A               	addwf	cadena@txt,w
  1004     03A6  0084               	movwf	4
  1005     03A7  120A  118A  2232  120A  118A  	fcall	stringdir
  1006     03AC  0099               	movwf	25	;volatile
  1007     03AD                     l1190:
  1008                           
  1009                           ;prelablab8.c: 164:     }
  1010     03AD  3001               	movlw	1
  1011     03AE  07B8               	addwf	cadena@i,f
  1012     03AF  1803               	skipnc
  1013     03B0  0AB9               	incf	cadena@i+1,f
  1014     03B1  3000               	movlw	0
  1015     03B2  07B9               	addwf	cadena@i+1,f
  1016     03B3                     l1192:
  1017     03B3  0839               	movf	cadena@i+1,w
  1018     03B4  3A80               	xorlw	128
  1019     03B5  00B4               	movwf	??_cadena
  1020     03B6  0837               	movf	cadena@cont0+1,w
  1021     03B7  3A80               	xorlw	128
  1022     03B8  0234               	subwf	??_cadena,w
  1023     03B9  1D03               	skipz
  1024     03BA  2BBD               	goto	u525
  1025     03BB  0836               	movf	cadena@cont0,w
  1026     03BC  0238               	subwf	cadena@i,w
  1027     03BD                     u525:
  1028     03BD  1C03               	skipc
  1029     03BE  2BC0               	goto	u521
  1030     03BF  2BC1               	goto	u520
  1031     03C0                     u521:
  1032     03C0  2B97               	goto	l1186
  1033     03C1                     u520:
  1034     03C1                     l99:
  1035     03C1  0008               	return
  1036     03C2                     __end_of_cadena:
  1037                           
  1038                           	psect	text3
  1039     002D                     __ptext3:	
  1040 ;; *************** function _isr *****************
  1041 ;; Defined at:
  1042 ;;		line 45 in file "prelablab8.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          0       6       0       0       0
  1059 ;;      Totals:         0       6       0       0       0
  1060 ;;Total ram usage:        6 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 2
  1063 ;; This function calls:
  1064 ;;		_asciiCDU
  1065 ;;		i1_cadena
  1066 ;; This function is called by:
  1067 ;;		Interrupt level 1
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071     002D                     _isr:	
  1072                           ;psect for function _isr
  1073                           
  1074     002D                     i1l1266:
  1075                           
  1076                           ;prelablab8.c: 46:     if(PIR1bits.RCIF){
  1077     002D  1E8C               	btfss	12,5	;volatile
  1078     002E  2830               	goto	u55_21
  1079     002F  2831               	goto	u55_20
  1080     0030                     u55_21:
  1081     0030  28CD               	goto	i1l1304
  1082     0031                     u55_20:
  1083     0031                     i1l1268:
  1084                           
  1085                           ;prelablab8.c: 48:         TXREG = RCREG;
  1086     0031  081A               	movf	26,w	;volatile
  1087     0032  0099               	movwf	25	;volatile
  1088     0033                     i1l1270:
  1089                           
  1090                           ;prelablab8.c: 52:         if(RCREG == 120){
  1091     0033  3078               	movlw	120
  1092     0034  061A               	xorwf	26,w	;volatile
  1093     0035  1D03               	btfss	3,2
  1094     0036  2838               	goto	u56_21
  1095     0037  2839               	goto	u56_20
  1096     0038                     u56_21:
  1097     0038  2893               	goto	i1l1296
  1098     0039                     u56_20:
  1099     0039                     i1l1272:
  1100                           
  1101                           ;prelablab8.c: 53:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1102     0039  3011               	movlw	17
  1103     003A  1283               	bcf	3,5	;RP0=0, select bank0
  1104     003B  1303               	bcf	3,6	;RP1=0, select bank0
  1105     003C  00AF               	movwf	??_isr+1
  1106     003D  3039               	movlw	57
  1107     003E  00AE               	movwf	??_isr
  1108     003F                     u67_27:
  1109     003F  0BAE               	decfsz	??_isr,f
  1110     0040  283F               	goto	u67_27
  1111     0041  0BAF               	decfsz	??_isr+1,f
  1112     0042  283F               	goto	u67_27
  1113     0043  2844               	nop2
  1114                           
  1115                           ;prelablab8.c: 54:             TXREG = '\r';
  1116     0044  300D               	movlw	13
  1117     0045  1283               	bcf	3,5	;RP0=0, select bank0
  1118     0046  1303               	bcf	3,6	;RP1=0, select bank0
  1119     0047  0099               	movwf	25	;volatile
  1120     0048                     i1l1274:
  1121                           
  1122                           ;prelablab8.c: 55:             asciiCDU(y);
  1123     0048  087D               	movf	_y+1,w
  1124     0049  00A5               	movwf	asciiCDU@x+1
  1125     004A  087C               	movf	_y,w
  1126     004B  00A4               	movwf	asciiCDU@x
  1127     004C  120A  118A  20E4  120A  118A  	fcall	_asciiCDU
  1128     0051                     i1l1276:
  1129                           
  1130                           ;prelablab8.c: 56:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1131     0051  3011               	movlw	17
  1132     0052  1283               	bcf	3,5	;RP0=0, select bank0
  1133     0053  1303               	bcf	3,6	;RP1=0, select bank0
  1134     0054  00AF               	movwf	??_isr+1
  1135     0055  3039               	movlw	57
  1136     0056  00AE               	movwf	??_isr
  1137     0057                     u68_27:
  1138     0057  0BAE               	decfsz	??_isr,f
  1139     0058  2857               	goto	u68_27
  1140     0059  0BAF               	decfsz	??_isr+1,f
  1141     005A  2857               	goto	u68_27
  1142     005B  285C               	nop2
  1143     005C                     i1l1278:
  1144                           
  1145                           ;prelablab8.c: 57:             TXREG = c;
  1146     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1147     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1148     005E  0841               	movf	_c,w
  1149     005F  0099               	movwf	25	;volatile
  1150     0060                     i1l1280:
  1151                           
  1152                           ;prelablab8.c: 58:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1153     0060  3011               	movlw	17
  1154     0061  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0062  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0063  00AF               	movwf	??_isr+1
  1157     0064  3039               	movlw	57
  1158     0065  00AE               	movwf	??_isr
  1159     0066                     u69_27:
  1160     0066  0BAE               	decfsz	??_isr,f
  1161     0067  2866               	goto	u69_27
  1162     0068  0BAF               	decfsz	??_isr+1,f
  1163     0069  2866               	goto	u69_27
  1164     006A  286B               	nop2
  1165     006B                     i1l1282:
  1166                           
  1167                           ;prelablab8.c: 59:             TXREG = d;
  1168     006B  1283               	bcf	3,5	;RP0=0, select bank0
  1169     006C  1303               	bcf	3,6	;RP1=0, select bank0
  1170     006D  083F               	movf	_d,w
  1171     006E  0099               	movwf	25	;volatile
  1172     006F                     i1l1284:
  1173                           
  1174                           ;prelablab8.c: 60:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1175     006F  3011               	movlw	17
  1176     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1177     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1178     0072  00AF               	movwf	??_isr+1
  1179     0073  3039               	movlw	57
  1180     0074  00AE               	movwf	??_isr
  1181     0075                     u70_27:
  1182     0075  0BAE               	decfsz	??_isr,f
  1183     0076  2875               	goto	u70_27
  1184     0077  0BAF               	decfsz	??_isr+1,f
  1185     0078  2875               	goto	u70_27
  1186     0079  287A               	nop2
  1187     007A                     i1l1286:
  1188                           
  1189                           ;prelablab8.c: 61:             TXREG = u;
  1190     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1191     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1192     007C  083D               	movf	_u,w
  1193     007D  0099               	movwf	25	;volatile
  1194     007E                     i1l1288:
  1195                           
  1196                           ;prelablab8.c: 62:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1197     007E  3011               	movlw	17
  1198     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1199     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1200     0081  00AF               	movwf	??_isr+1
  1201     0082  3039               	movlw	57
  1202     0083  00AE               	movwf	??_isr
  1203     0084                     u71_27:
  1204     0084  0BAE               	decfsz	??_isr,f
  1205     0085  2884               	goto	u71_27
  1206     0086  0BAF               	decfsz	??_isr+1,f
  1207     0087  2884               	goto	u71_27
  1208     0088  2889               	nop2
  1209     0089                     i1l1290:
  1210                           
  1211                           ;prelablab8.c: 63:             TXREG = '\r';
  1212     0089  300D               	movlw	13
  1213     008A  1283               	bcf	3,5	;RP0=0, select bank0
  1214     008B  1303               	bcf	3,6	;RP1=0, select bank0
  1215     008C  0099               	movwf	25	;volatile
  1216     008D                     i1l1292:
  1217                           
  1218                           ;prelablab8.c: 64:             TXREG = '\r';
  1219     008D  300D               	movlw	13
  1220     008E  0099               	movwf	25	;volatile
  1221     008F                     i1l1294:
  1222                           
  1223                           ;prelablab8.c: 65:             cont = 1;
  1224     008F  3001               	movlw	1
  1225     0090  00C3               	movwf	_cont
  1226     0091  3000               	movlw	0
  1227     0092  00C4               	movwf	_cont+1
  1228     0093                     i1l1296:
  1229                           
  1230                           ;prelablab8.c: 67:         if(RCREG == 111){
  1231     0093  306F               	movlw	111
  1232     0094  061A               	xorwf	26,w	;volatile
  1233     0095  1D03               	btfss	3,2
  1234     0096  2898               	goto	u57_21
  1235     0097  2899               	goto	u57_20
  1236     0098                     u57_21:
  1237     0098  28CD               	goto	i1l1304
  1238     0099                     u57_20:
  1239     0099                     i1l1298:
  1240                           
  1241                           ;prelablab8.c: 68:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1242     0099  3011               	movlw	17
  1243     009A  1283               	bcf	3,5	;RP0=0, select bank0
  1244     009B  1303               	bcf	3,6	;RP1=0, select bank0
  1245     009C  00AF               	movwf	??_isr+1
  1246     009D  3039               	movlw	57
  1247     009E  00AE               	movwf	??_isr
  1248     009F                     u72_27:
  1249     009F  0BAE               	decfsz	??_isr,f
  1250     00A0  289F               	goto	u72_27
  1251     00A1  0BAF               	decfsz	??_isr+1,f
  1252     00A2  289F               	goto	u72_27
  1253     00A3  28A4               	nop2
  1254                           
  1255                           ;prelablab8.c: 69:             TXREG = '\r';
  1256     00A4  300D               	movlw	13
  1257     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1258     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1259     00A7  0099               	movwf	25	;volatile
  1260     00A8                     i1l1300:
  1261                           
  1262                           ;prelablab8.c: 70:             cadena("ingrese un caracter: ");
  1263     00A8  303F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1264     00A9  120A  118A  23C2  120A  118A  	fcall	i1_cadena
  1265     00AE                     i1l72:	
  1266                           ;prelablab8.c: 71:             while(RCIF == 0);
  1267                           
  1268     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1269     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1270     00B0  1E8C               	btfss	12,5	;volatile
  1271     00B1  28B3               	goto	u58_21
  1272     00B2  28B4               	goto	u58_20
  1273     00B3                     u58_21:
  1274     00B3  28AE               	goto	i1l72
  1275     00B4                     u58_20:
  1276     00B4                     i1l1302:
  1277                           
  1278                           ;prelablab8.c: 72:             TXREG = RCREG;
  1279     00B4  081A               	movf	26,w	;volatile
  1280     00B5  0099               	movwf	25	;volatile
  1281                           
  1282                           ;prelablab8.c: 73:             PORTB = RCREG;
  1283     00B6  081A               	movf	26,w	;volatile
  1284     00B7  0086               	movwf	6	;volatile
  1285                           
  1286                           ;prelablab8.c: 74:             _delay((unsigned long)((50)*(1000000/4000.0)));
  1287     00B8  3011               	movlw	17
  1288     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1289     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1290     00BB  00AF               	movwf	??_isr+1
  1291     00BC  3039               	movlw	57
  1292     00BD  00AE               	movwf	??_isr
  1293     00BE                     u73_27:
  1294     00BE  0BAE               	decfsz	??_isr,f
  1295     00BF  28BE               	goto	u73_27
  1296     00C0  0BAF               	decfsz	??_isr+1,f
  1297     00C1  28BE               	goto	u73_27
  1298     00C2  28C3               	nop2
  1299                           
  1300                           ;prelablab8.c: 75:             TXREG = '\r';
  1301     00C3  300D               	movlw	13
  1302     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1303     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1304     00C6  0099               	movwf	25	;volatile
  1305                           
  1306                           ;prelablab8.c: 76:             TXREG = '\r';
  1307     00C7  300D               	movlw	13
  1308     00C8  0099               	movwf	25	;volatile
  1309                           
  1310                           ;prelablab8.c: 77:             cont = 1;
  1311     00C9  3001               	movlw	1
  1312     00CA  00C3               	movwf	_cont
  1313     00CB  3000               	movlw	0
  1314     00CC  00C4               	movwf	_cont+1
  1315     00CD                     i1l1304:
  1316                           
  1317                           ;prelablab8.c: 80:     if(ADIF){
  1318     00CD  1F0C               	btfss	12,6	;volatile
  1319     00CE  28D0               	goto	u59_21
  1320     00CF  28D1               	goto	u59_20
  1321     00D0                     u59_21:
  1322     00D0  28D9               	goto	i1l76
  1323     00D1                     u59_20:
  1324     00D1                     i1l1306:
  1325                           
  1326                           ;prelablab8.c: 81:         y = ADRESH;
  1327     00D1  081E               	movf	30,w	;volatile
  1328     00D2  00AE               	movwf	??_isr
  1329     00D3  01AF               	clrf	??_isr+1
  1330     00D4  082E               	movf	??_isr,w
  1331     00D5  00FC               	movwf	_y
  1332     00D6  082F               	movf	??_isr+1,w
  1333     00D7  00FD               	movwf	_y+1
  1334     00D8                     i1l1308:
  1335                           
  1336                           ;prelablab8.c: 82:         PIR1bits.ADIF = 0;
  1337     00D8  130C               	bcf	12,6	;volatile
  1338     00D9                     i1l76:
  1339     00D9  0833               	movf	??_isr+5,w
  1340     00DA  00FF               	movwf	btemp+1
  1341     00DB  0832               	movf	??_isr+4,w
  1342     00DC  008A               	movwf	10
  1343     00DD  0831               	movf	??_isr+3,w
  1344     00DE  0084               	movwf	4
  1345     00DF  0E30               	swapf	??_isr+2,w
  1346     00E0  0083               	movwf	3
  1347     00E1  0EFE               	swapf	btemp,f
  1348     00E2  0E7E               	swapf	btemp,w
  1349     00E3  0009               	retfie
  1350     00E4                     __end_of_isr:
  1351                           
  1352                           	psect	intentry
  1353     0004                     __pintentry:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1356                           
  1357     0004                     interrupt_function:
  1358     007E                     saved_w	set	btemp
  1359     0004  00FE               	movwf	btemp
  1360     0005  0E03               	swapf	3,w
  1361     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1362     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1363     0008  00B0               	movwf	??_isr+2
  1364     0009  0804               	movf	4,w
  1365     000A  00B1               	movwf	??_isr+3
  1366     000B  080A               	movf	10,w
  1367     000C  00B2               	movwf	??_isr+4
  1368     000D  087F               	movf	btemp+1,w
  1369     000E  00B3               	movwf	??_isr+5
  1370     000F  120A  118A  282D   	ljmp	_isr
  1371                           
  1372                           	psect	text4
  1373     03C2                     __ptext4:	
  1374 ;; *************** function i1_cadena *****************
  1375 ;; Defined at:
  1376 ;;		line 156 in file "prelablab8.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  txt             1    wreg     PTR unsigned char 
  1379 ;;		 -> STR_3(27), STR_2(23), STR_1(22), 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  txt             1    2[COMMON] PTR unsigned char 
  1382 ;;		 -> STR_3(27), STR_2(23), STR_1(22), 
  1383 ;;  i               2    5[COMMON] int 
  1384 ;;  cont0           2    3[COMMON] int 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         5       0       0       0       0
  1396 ;;      Temps:          2       0       0       0       0
  1397 ;;      Totals:         7       0       0       0       0
  1398 ;;Total ram usage:        7 bytes
  1399 ;; Hardware stack levels used: 2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_isr
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407     03C2                     i1_cadena:	
  1408                           ;psect for function i1_cadena
  1409                           
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in i1_cadena: [wreg-fsr0h+status,2+status,0+pclath]
  1413                           ;i1cadena@txt stored from wreg
  1414     03C2  00F2               	movwf	i1cadena@txt
  1415     03C3                     i1l1250:
  1416                           
  1417                           ;prelablab8.c: 157:     int cont0 = 0;
  1418     03C3  01F3               	clrf	i1cadena@cont0
  1419     03C4  01F4               	clrf	i1cadena@cont0+1
  1420                           
  1421                           ;prelablab8.c: 158:     while(txt[cont0]!=0){
  1422     03C5  2BCC               	goto	i1l1254
  1423     03C6                     i1l1252:
  1424                           
  1425                           ;prelablab8.c: 159:         cont0++;
  1426     03C6  3001               	movlw	1
  1427     03C7  07F3               	addwf	i1cadena@cont0,f
  1428     03C8  1803               	skipnc
  1429     03C9  0AF4               	incf	i1cadena@cont0+1,f
  1430     03CA  3000               	movlw	0
  1431     03CB  07F4               	addwf	i1cadena@cont0+1,f
  1432     03CC                     i1l1254:
  1433                           
  1434                           ;prelablab8.c: 158:     while(txt[cont0]!=0){
  1435     03CC  0873               	movf	i1cadena@cont0,w
  1436     03CD  0772               	addwf	i1cadena@txt,w
  1437     03CE  0084               	movwf	4
  1438     03CF  120A  118A  2232  120A  118A  	fcall	stringdir
  1439     03D4  3A00               	xorlw	0
  1440     03D5  1D03               	skipz
  1441     03D6  2BD8               	goto	u53_21
  1442     03D7  2BD9               	goto	u53_20
  1443     03D8                     u53_21:
  1444     03D8  2BC6               	goto	i1l1252
  1445     03D9                     u53_20:
  1446     03D9                     i1l1256:
  1447                           
  1448                           ;prelablab8.c: 161:     for(int i = 0; i < cont0; i++){
  1449     03D9  01F5               	clrf	i1cadena@i
  1450     03DA  01F6               	clrf	i1cadena@i+1
  1451     03DB  2BF6               	goto	i1l1264
  1452     03DC                     i1l1258:
  1453                           
  1454                           ;prelablab8.c: 162:         _delay((unsigned long)((50)*(1000000/4000.0)));
  1455     03DC  3011               	movlw	17
  1456     03DD  00F1               	movwf	??i1_cadena+1
  1457     03DE  303A               	movlw	58
  1458     03DF  00F0               	movwf	??i1_cadena
  1459     03E0                     u74_27:
  1460     03E0  0BF0               	decfsz	??i1_cadena,f
  1461     03E1  2BE0               	goto	u74_27
  1462     03E2  0BF1               	decfsz	??i1_cadena+1,f
  1463     03E3  2BE0               	goto	u74_27
  1464     03E4  0000               	nop
  1465     03E5                     i1l1260:
  1466                           
  1467                           ;prelablab8.c: 163:         TXREG = txt[i];
  1468     03E5  0875               	movf	i1cadena@i,w
  1469     03E6  0772               	addwf	i1cadena@txt,w
  1470     03E7  0084               	movwf	4
  1471     03E8  120A  118A  2232  120A  118A  	fcall	stringdir
  1472     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1473     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1474     03EF  0099               	movwf	25	;volatile
  1475     03F0                     i1l1262:
  1476                           
  1477                           ;prelablab8.c: 164:     }
  1478     03F0  3001               	movlw	1
  1479     03F1  07F5               	addwf	i1cadena@i,f
  1480     03F2  1803               	skipnc
  1481     03F3  0AF6               	incf	i1cadena@i+1,f
  1482     03F4  3000               	movlw	0
  1483     03F5  07F6               	addwf	i1cadena@i+1,f
  1484     03F6                     i1l1264:
  1485     03F6  0876               	movf	i1cadena@i+1,w
  1486     03F7  3A80               	xorlw	128
  1487     03F8  00F0               	movwf	??i1_cadena
  1488     03F9  0874               	movf	i1cadena@cont0+1,w
  1489     03FA  3A80               	xorlw	128
  1490     03FB  0270               	subwf	??i1_cadena,w
  1491     03FC  1D03               	skipz
  1492     03FD  2C00               	goto	u54_25
  1493     03FE  0873               	movf	i1cadena@cont0,w
  1494     03FF  0275               	subwf	i1cadena@i,w
  1495     0400                     u54_25:
  1496     0400  1C03               	skipc
  1497     0401  2C03               	goto	u54_21
  1498     0402  2C04               	goto	u54_20
  1499     0403                     u54_21:
  1500     0403  2BDC               	goto	i1l1258
  1501     0404                     u54_20:
  1502     0404                     i1l99:
  1503     0404  0008               	return
  1504     0405                     __end_ofi1_cadena:
  1505                           
  1506                           	psect	text5
  1507     00E4                     __ptext5:	
  1508 ;; *************** function _asciiCDU *****************
  1509 ;; Defined at:
  1510 ;;		line 168 in file "prelablab8.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  x               2    4[BANK0 ] int 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  unidades        2   10[BANK0 ] int 
  1515 ;;  decenas         2    8[BANK0 ] int 
  1516 ;;  centenas        2    6[BANK0 ] int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       2       0       0       0
  1527 ;;      Locals:         0       8       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0      10       0       0       0
  1530 ;;Total ram usage:       10 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 1
  1533 ;; This function calls:
  1534 ;;		___awdiv
  1535 ;;		___awmod
  1536 ;;		_asciiNUM
  1537 ;; This function is called by:
  1538 ;;		_isr
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542     00E4                     _asciiCDU:	
  1543                           ;psect for function _asciiCDU
  1544                           
  1545     00E4                     i1l1168:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _asciiCDU: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1548                           
  1549                           
  1550                           ;prelablab8.c: 169:     int centenas = x/100;
  1551     00E4  3064               	movlw	100
  1552     00E5  00F7               	movwf	___awdiv@divisor
  1553     00E6  3000               	movlw	0
  1554     00E7  00F8               	movwf	___awdiv@divisor+1
  1555     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1556     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1557     00EA  0825               	movf	asciiCDU@x+1,w
  1558     00EB  00FA               	movwf	___awdiv@dividend+1
  1559     00EC  0824               	movf	asciiCDU@x,w
  1560     00ED  00F9               	movwf	___awdiv@dividend
  1561     00EE  120A  118A  216D  120A  118A  	fcall	___awdiv
  1562     00F3  0878               	movf	?___awdiv+1,w
  1563     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1564     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1565     00F6  00A7               	movwf	asciiCDU@centenas+1
  1566     00F7  0877               	movf	?___awdiv,w
  1567     00F8  00A6               	movwf	asciiCDU@centenas
  1568                           
  1569                           ;prelablab8.c: 170:     int decenas = (x%100)/10;
  1570     00F9  300A               	movlw	10
  1571     00FA  00F7               	movwf	___awdiv@divisor
  1572     00FB  3000               	movlw	0
  1573     00FC  00F8               	movwf	___awdiv@divisor+1
  1574     00FD  0825               	movf	asciiCDU@x+1,w
  1575     00FE  00F3               	movwf	___awmod@dividend+1
  1576     00FF  0824               	movf	asciiCDU@x,w
  1577     0100  00F2               	movwf	___awmod@dividend
  1578     0101  3064               	movlw	100
  1579     0102  00F0               	movwf	___awmod@divisor
  1580     0103  3000               	movlw	0
  1581     0104  00F1               	movwf	___awmod@divisor+1
  1582     0105  120A  118A  228C  120A  118A  	fcall	___awmod
  1583     010A  0871               	movf	?___awmod+1,w
  1584     010B  00FA               	movwf	___awdiv@dividend+1
  1585     010C  0870               	movf	?___awmod,w
  1586     010D  00F9               	movwf	___awdiv@dividend
  1587     010E  120A  118A  216D  120A  118A  	fcall	___awdiv
  1588     0113  0878               	movf	?___awdiv+1,w
  1589     0114  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0115  1303               	bcf	3,6	;RP1=0, select bank0
  1591     0116  00A9               	movwf	asciiCDU@decenas+1
  1592     0117  0877               	movf	?___awdiv,w
  1593     0118  00A8               	movwf	asciiCDU@decenas
  1594                           
  1595                           ;prelablab8.c: 171:     int unidades = (x%100)%10;
  1596     0119  0825               	movf	asciiCDU@x+1,w
  1597     011A  00F3               	movwf	___awmod@dividend+1
  1598     011B  0824               	movf	asciiCDU@x,w
  1599     011C  00F2               	movwf	___awmod@dividend
  1600     011D  3064               	movlw	100
  1601     011E  00F0               	movwf	___awmod@divisor
  1602     011F  3000               	movlw	0
  1603     0120  00F1               	movwf	___awmod@divisor+1
  1604     0121  120A  118A  228C  120A  118A  	fcall	___awmod
  1605     0126  0871               	movf	?___awmod+1,w
  1606     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1607     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1608     0129  00AD               	movwf	_asciiCDU$998+1
  1609     012A  0870               	movf	?___awmod,w
  1610     012B  00AC               	movwf	_asciiCDU$998
  1611                           
  1612                           ;prelablab8.c: 171:     int unidades = (x%100)%10;
  1613     012C  300A               	movlw	10
  1614     012D  00F0               	movwf	___awmod@divisor
  1615     012E  3000               	movlw	0
  1616     012F  00F1               	movwf	___awmod@divisor+1
  1617     0130  082D               	movf	_asciiCDU$998+1,w
  1618     0131  00F3               	movwf	___awmod@dividend+1
  1619     0132  082C               	movf	_asciiCDU$998,w
  1620     0133  00F2               	movwf	___awmod@dividend
  1621     0134  120A  118A  228C  120A  118A  	fcall	___awmod
  1622     0139  0871               	movf	?___awmod+1,w
  1623     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1624     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1625     013C  00AB               	movwf	asciiCDU@unidades+1
  1626     013D  0870               	movf	?___awmod,w
  1627     013E  00AA               	movwf	asciiCDU@unidades
  1628     013F                     i1l1170:
  1629                           
  1630                           ;prelablab8.c: 173:     c = asciiNUM(centenas);
  1631     013F  0827               	movf	asciiCDU@centenas+1,w
  1632     0140  00F1               	movwf	asciiNUM@a+1
  1633     0141  0826               	movf	asciiCDU@centenas,w
  1634     0142  00F0               	movwf	asciiNUM@a
  1635     0143  120A  118A  21D6  120A  118A  	fcall	_asciiNUM
  1636     0148  0871               	movf	?_asciiNUM+1,w
  1637     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1638     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1639     014B  00C2               	movwf	_c+1
  1640     014C  0870               	movf	?_asciiNUM,w
  1641     014D  00C1               	movwf	_c
  1642     014E                     i1l1172:
  1643                           
  1644                           ;prelablab8.c: 174:     d = asciiNUM(decenas);
  1645     014E  0829               	movf	asciiCDU@decenas+1,w
  1646     014F  00F1               	movwf	asciiNUM@a+1
  1647     0150  0828               	movf	asciiCDU@decenas,w
  1648     0151  00F0               	movwf	asciiNUM@a
  1649     0152  120A  118A  21D6  120A  118A  	fcall	_asciiNUM
  1650     0157  0871               	movf	?_asciiNUM+1,w
  1651     0158  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0159  1303               	bcf	3,6	;RP1=0, select bank0
  1653     015A  00C0               	movwf	_d+1
  1654     015B  0870               	movf	?_asciiNUM,w
  1655     015C  00BF               	movwf	_d
  1656     015D                     i1l1174:
  1657                           
  1658                           ;prelablab8.c: 175:     u = asciiNUM(unidades);
  1659     015D  082B               	movf	asciiCDU@unidades+1,w
  1660     015E  00F1               	movwf	asciiNUM@a+1
  1661     015F  082A               	movf	asciiCDU@unidades,w
  1662     0160  00F0               	movwf	asciiNUM@a
  1663     0161  120A  118A  21D6  120A  118A  	fcall	_asciiNUM
  1664     0166  0871               	movf	?_asciiNUM+1,w
  1665     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1666     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0169  00BE               	movwf	_u+1
  1668     016A  0870               	movf	?_asciiNUM,w
  1669     016B  00BD               	movwf	_u
  1670     016C                     i1l102:
  1671     016C  0008               	return
  1672     016D                     __end_of_asciiCDU:
  1673                           
  1674                           	psect	text6
  1675     01D6                     __ptext6:	
  1676 ;; *************** function _asciiNUM *****************
  1677 ;; Defined at:
  1678 ;;		line 179 in file "prelablab8.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  a               2    0[COMMON] int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    0[COMMON] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         2       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         2       0       0       0       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_asciiCDU
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705     01D6                     _asciiNUM:	
  1706                           ;psect for function _asciiNUM
  1707                           
  1708     01D6                     i1l1032:	
  1709                           ;incstack = 0
  1710                           ; Regs used in _asciiNUM: [wreg-fsr0h+status,2+status,0]
  1711                           
  1712                           
  1713                           ;prelablab8.c: 180:     switch(a){
  1714     01D6  2A0C               	goto	i1l1080
  1715     01D7                     i1l1034:
  1716                           
  1717                           ;prelablab8.c: 182:             return 48;
  1718     01D7  3030               	movlw	48
  1719     01D8  00F0               	movwf	?_asciiNUM
  1720     01D9  3000               	movlw	0
  1721     01DA  00F1               	movwf	?_asciiNUM+1
  1722     01DB  2A31               	goto	i1l107
  1723     01DC                     i1l1038:
  1724                           
  1725                           ;prelablab8.c: 184:             return 49;
  1726     01DC  3031               	movlw	49
  1727     01DD  00F0               	movwf	?_asciiNUM
  1728     01DE  3000               	movlw	0
  1729     01DF  00F1               	movwf	?_asciiNUM+1
  1730     01E0  2A31               	goto	i1l107
  1731     01E1                     i1l1042:
  1732                           
  1733                           ;prelablab8.c: 186:             return 50;
  1734     01E1  3032               	movlw	50
  1735     01E2  00F0               	movwf	?_asciiNUM
  1736     01E3  3000               	movlw	0
  1737     01E4  00F1               	movwf	?_asciiNUM+1
  1738     01E5  2A31               	goto	i1l107
  1739     01E6                     i1l1046:
  1740                           
  1741                           ;prelablab8.c: 188:             return 51;
  1742     01E6  3033               	movlw	51
  1743     01E7  00F0               	movwf	?_asciiNUM
  1744     01E8  3000               	movlw	0
  1745     01E9  00F1               	movwf	?_asciiNUM+1
  1746     01EA  2A31               	goto	i1l107
  1747     01EB                     i1l1050:
  1748                           
  1749                           ;prelablab8.c: 190:             return 52;
  1750     01EB  3034               	movlw	52
  1751     01EC  00F0               	movwf	?_asciiNUM
  1752     01ED  3000               	movlw	0
  1753     01EE  00F1               	movwf	?_asciiNUM+1
  1754     01EF  2A31               	goto	i1l107
  1755     01F0                     i1l1054:
  1756                           
  1757                           ;prelablab8.c: 192:             return 53;
  1758     01F0  3035               	movlw	53
  1759     01F1  00F0               	movwf	?_asciiNUM
  1760     01F2  3000               	movlw	0
  1761     01F3  00F1               	movwf	?_asciiNUM+1
  1762     01F4  2A31               	goto	i1l107
  1763     01F5                     i1l1058:
  1764                           
  1765                           ;prelablab8.c: 194:             return 54;
  1766     01F5  3036               	movlw	54
  1767     01F6  00F0               	movwf	?_asciiNUM
  1768     01F7  3000               	movlw	0
  1769     01F8  00F1               	movwf	?_asciiNUM+1
  1770     01F9  2A31               	goto	i1l107
  1771     01FA                     i1l1062:
  1772                           
  1773                           ;prelablab8.c: 196:             return 55;
  1774     01FA  3037               	movlw	55
  1775     01FB  00F0               	movwf	?_asciiNUM
  1776     01FC  3000               	movlw	0
  1777     01FD  00F1               	movwf	?_asciiNUM+1
  1778     01FE  2A31               	goto	i1l107
  1779     01FF                     i1l1066:
  1780                           
  1781                           ;prelablab8.c: 198:             return 56;
  1782     01FF  3038               	movlw	56
  1783     0200  00F0               	movwf	?_asciiNUM
  1784     0201  3000               	movlw	0
  1785     0202  00F1               	movwf	?_asciiNUM+1
  1786     0203  2A31               	goto	i1l107
  1787     0204                     i1l1070:
  1788                           
  1789                           ;prelablab8.c: 200:             return 57;
  1790     0204  3039               	movlw	57
  1791     0205  00F0               	movwf	?_asciiNUM
  1792     0206  3000               	movlw	0
  1793     0207  00F1               	movwf	?_asciiNUM+1
  1794     0208  2A31               	goto	i1l107
  1795     0209                     i1l1074:
  1796                           
  1797                           ;prelablab8.c: 202:             return 0;
  1798     0209  01F0               	clrf	?_asciiNUM
  1799     020A  01F1               	clrf	?_asciiNUM+1
  1800     020B  2A31               	goto	i1l107
  1801     020C                     i1l1080:
  1802                           
  1803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 1, Range of values is 0 to 0
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            4     3 (average)
  1809                           ; direct_byte           11     8 (fixed)
  1810                           ; jumptable            260     6 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812     020C  0871               	movf	asciiNUM@a+1,w
  1813     020D  3A00               	xorlw	0	; case 0
  1814     020E  1903               	skipnz
  1815     020F  2A11               	goto	i1l1354
  1816     0210  2A09               	goto	i1l1074
  1817     0211                     i1l1354:
  1818                           
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 10, Range of values is 0 to 9
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           31    16 (average)
  1824                           ; direct_byte           38     8 (fixed)
  1825                           ; jumptable            260     6 (fixed)
  1826                           ;	Chosen strategy is simple_byte
  1827     0211  0870               	movf	asciiNUM@a,w
  1828     0212  3A00               	xorlw	0	; case 0
  1829     0213  1903               	skipnz
  1830     0214  29D7               	goto	i1l1034
  1831     0215  3A01               	xorlw	1	; case 1
  1832     0216  1903               	skipnz
  1833     0217  29DC               	goto	i1l1038
  1834     0218  3A03               	xorlw	3	; case 2
  1835     0219  1903               	skipnz
  1836     021A  29E1               	goto	i1l1042
  1837     021B  3A01               	xorlw	1	; case 3
  1838     021C  1903               	skipnz
  1839     021D  29E6               	goto	i1l1046
  1840     021E  3A07               	xorlw	7	; case 4
  1841     021F  1903               	skipnz
  1842     0220  29EB               	goto	i1l1050
  1843     0221  3A01               	xorlw	1	; case 5
  1844     0222  1903               	skipnz
  1845     0223  29F0               	goto	i1l1054
  1846     0224  3A03               	xorlw	3	; case 6
  1847     0225  1903               	skipnz
  1848     0226  29F5               	goto	i1l1058
  1849     0227  3A01               	xorlw	1	; case 7
  1850     0228  1903               	skipnz
  1851     0229  29FA               	goto	i1l1062
  1852     022A  3A0F               	xorlw	15	; case 8
  1853     022B  1903               	skipnz
  1854     022C  29FF               	goto	i1l1066
  1855     022D  3A01               	xorlw	1	; case 9
  1856     022E  1903               	skipnz
  1857     022F  2A04               	goto	i1l1070
  1858     0230  2A09               	goto	i1l1074
  1859     0231                     i1l107:
  1860     0231  0008               	return
  1861     0232                     __end_of_asciiNUM:
  1862                           
  1863                           	psect	text7
  1864     028C                     __ptext7:	
  1865 ;; *************** function ___awmod *****************
  1866 ;; Defined at:
  1867 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  divisor         2    0[COMMON] int 
  1870 ;;  dividend        2    2[COMMON] int 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  sign            1    6[COMMON] unsigned char 
  1873 ;;  counter         1    5[COMMON] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[COMMON] int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         4       0       0       0       0
  1884 ;;      Locals:         2       0       0       0       0
  1885 ;;      Temps:          1       0       0       0       0
  1886 ;;      Totals:         7       0       0       0       0
  1887 ;;Total ram usage:        7 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_asciiCDU
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896     028C                     ___awmod:	
  1897                           ;psect for function ___awmod
  1898                           
  1899     028C                     i1l1130:	
  1900                           ;incstack = 0
  1901                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1902                           
  1903     028C  01F6               	clrf	___awmod@sign
  1904     028D                     i1l1132:
  1905     028D  1FF3               	btfss	___awmod@dividend+1,7
  1906     028E  2A90               	goto	u42_21
  1907     028F  2A91               	goto	u42_20
  1908     0290                     u42_21:
  1909     0290  2A98               	goto	i1l1138
  1910     0291                     u42_20:
  1911     0291                     i1l1134:
  1912     0291  09F2               	comf	___awmod@dividend,f
  1913     0292  09F3               	comf	___awmod@dividend+1,f
  1914     0293  0AF2               	incf	___awmod@dividend,f
  1915     0294  1903               	skipnz
  1916     0295  0AF3               	incf	___awmod@dividend+1,f
  1917     0296                     i1l1136:
  1918     0296  01F6               	clrf	___awmod@sign
  1919     0297  0AF6               	incf	___awmod@sign,f
  1920     0298                     i1l1138:
  1921     0298  1FF1               	btfss	___awmod@divisor+1,7
  1922     0299  2A9B               	goto	u43_21
  1923     029A  2A9C               	goto	u43_20
  1924     029B                     u43_21:
  1925     029B  2AA1               	goto	i1l1142
  1926     029C                     u43_20:
  1927     029C                     i1l1140:
  1928     029C  09F0               	comf	___awmod@divisor,f
  1929     029D  09F1               	comf	___awmod@divisor+1,f
  1930     029E  0AF0               	incf	___awmod@divisor,f
  1931     029F  1903               	skipnz
  1932     02A0  0AF1               	incf	___awmod@divisor+1,f
  1933     02A1                     i1l1142:
  1934     02A1  0870               	movf	___awmod@divisor,w
  1935     02A2  0471               	iorwf	___awmod@divisor+1,w
  1936     02A3  1903               	btfsc	3,2
  1937     02A4  2AA6               	goto	u44_21
  1938     02A5  2AA7               	goto	u44_20
  1939     02A6                     u44_21:
  1940     02A6  2AD6               	goto	i1l1160
  1941     02A7                     u44_20:
  1942     02A7                     i1l1144:
  1943     02A7  01F5               	clrf	___awmod@counter
  1944     02A8  0AF5               	incf	___awmod@counter,f
  1945     02A9  2AB5               	goto	i1l1150
  1946     02AA                     i1l1146:
  1947     02AA  3001               	movlw	1
  1948     02AB                     u45_25:
  1949     02AB  1003               	clrc
  1950     02AC  0DF0               	rlf	___awmod@divisor,f
  1951     02AD  0DF1               	rlf	___awmod@divisor+1,f
  1952     02AE  3EFF               	addlw	-1
  1953     02AF  1D03               	skipz
  1954     02B0  2AAB               	goto	u45_25
  1955     02B1                     i1l1148:
  1956     02B1  3001               	movlw	1
  1957     02B2  00F4               	movwf	??___awmod
  1958     02B3  0874               	movf	??___awmod,w
  1959     02B4  07F5               	addwf	___awmod@counter,f
  1960     02B5                     i1l1150:
  1961     02B5  1FF1               	btfss	___awmod@divisor+1,7
  1962     02B6  2AB8               	goto	u46_21
  1963     02B7  2AB9               	goto	u46_20
  1964     02B8                     u46_21:
  1965     02B8  2AAA               	goto	i1l1146
  1966     02B9                     u46_20:
  1967     02B9                     i1l1152:
  1968     02B9  0871               	movf	___awmod@divisor+1,w
  1969     02BA  0273               	subwf	___awmod@dividend+1,w
  1970     02BB  1D03               	skipz
  1971     02BC  2ABF               	goto	u47_25
  1972     02BD  0870               	movf	___awmod@divisor,w
  1973     02BE  0272               	subwf	___awmod@dividend,w
  1974     02BF                     u47_25:
  1975     02BF  1C03               	skipc
  1976     02C0  2AC2               	goto	u47_21
  1977     02C1  2AC3               	goto	u47_20
  1978     02C2                     u47_21:
  1979     02C2  2AC9               	goto	i1l1156
  1980     02C3                     u47_20:
  1981     02C3                     i1l1154:
  1982     02C3  0870               	movf	___awmod@divisor,w
  1983     02C4  02F2               	subwf	___awmod@dividend,f
  1984     02C5  0871               	movf	___awmod@divisor+1,w
  1985     02C6  1C03               	skipc
  1986     02C7  03F3               	decf	___awmod@dividend+1,f
  1987     02C8  02F3               	subwf	___awmod@dividend+1,f
  1988     02C9                     i1l1156:
  1989     02C9  3001               	movlw	1
  1990     02CA                     u48_25:
  1991     02CA  1003               	clrc
  1992     02CB  0CF1               	rrf	___awmod@divisor+1,f
  1993     02CC  0CF0               	rrf	___awmod@divisor,f
  1994     02CD  3EFF               	addlw	-1
  1995     02CE  1D03               	skipz
  1996     02CF  2ACA               	goto	u48_25
  1997     02D0                     i1l1158:
  1998     02D0  3001               	movlw	1
  1999     02D1  02F5               	subwf	___awmod@counter,f
  2000     02D2  1D03               	btfss	3,2
  2001     02D3  2AD5               	goto	u49_21
  2002     02D4  2AD6               	goto	u49_20
  2003     02D5                     u49_21:
  2004     02D5  2AB9               	goto	i1l1152
  2005     02D6                     u49_20:
  2006     02D6                     i1l1160:
  2007     02D6  0876               	movf	___awmod@sign,w
  2008     02D7  1903               	btfsc	3,2
  2009     02D8  2ADA               	goto	u50_21
  2010     02D9  2ADB               	goto	u50_20
  2011     02DA                     u50_21:
  2012     02DA  2AE0               	goto	i1l1164
  2013     02DB                     u50_20:
  2014     02DB                     i1l1162:
  2015     02DB  09F2               	comf	___awmod@dividend,f
  2016     02DC  09F3               	comf	___awmod@dividend+1,f
  2017     02DD  0AF2               	incf	___awmod@dividend,f
  2018     02DE  1903               	skipnz
  2019     02DF  0AF3               	incf	___awmod@dividend+1,f
  2020     02E0                     i1l1164:
  2021     02E0  0873               	movf	___awmod@dividend+1,w
  2022     02E1  00F1               	movwf	?___awmod+1
  2023     02E2  0872               	movf	___awmod@dividend,w
  2024     02E3  00F0               	movwf	?___awmod
  2025     02E4                     i1l370:
  2026     02E4  0008               	return
  2027     02E5                     __end_of___awmod:
  2028                           
  2029                           	psect	text8
  2030     016D                     __ptext8:	
  2031 ;; *************** function ___awdiv *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    7[COMMON] int 
  2036 ;;  dividend        2    9[COMMON] int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  quotient        2    2[BANK0 ] int 
  2039 ;;  sign            1    1[BANK0 ] unsigned char 
  2040 ;;  counter         1    0[BANK0 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2    7[COMMON] int 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         4       0       0       0       0
  2051 ;;      Locals:         0       4       0       0       0
  2052 ;;      Temps:          1       0       0       0       0
  2053 ;;      Totals:         5       4       0       0       0
  2054 ;;Total ram usage:        9 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_asciiCDU
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     016D                     ___awdiv:	
  2064                           ;psect for function ___awdiv
  2065                           
  2066     016D                     i1l1086:	
  2067                           ;incstack = 0
  2068                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2069                           
  2070     016D  1283               	bcf	3,5	;RP0=0, select bank0
  2071     016E  1303               	bcf	3,6	;RP1=0, select bank0
  2072     016F  01A1               	clrf	___awdiv@sign
  2073     0170                     i1l1088:
  2074     0170  1FF8               	btfss	___awdiv@divisor+1,7
  2075     0171  2973               	goto	u32_21
  2076     0172  2974               	goto	u32_20
  2077     0173                     u32_21:
  2078     0173  297B               	goto	i1l1094
  2079     0174                     u32_20:
  2080     0174                     i1l1090:
  2081     0174  09F7               	comf	___awdiv@divisor,f
  2082     0175  09F8               	comf	___awdiv@divisor+1,f
  2083     0176  0AF7               	incf	___awdiv@divisor,f
  2084     0177  1903               	skipnz
  2085     0178  0AF8               	incf	___awdiv@divisor+1,f
  2086     0179                     i1l1092:
  2087     0179  01A1               	clrf	___awdiv@sign
  2088     017A  0AA1               	incf	___awdiv@sign,f
  2089     017B                     i1l1094:
  2090     017B  1FFA               	btfss	___awdiv@dividend+1,7
  2091     017C  297E               	goto	u33_21
  2092     017D  297F               	goto	u33_20
  2093     017E                     u33_21:
  2094     017E  2988               	goto	i1l1100
  2095     017F                     u33_20:
  2096     017F                     i1l1096:
  2097     017F  09F9               	comf	___awdiv@dividend,f
  2098     0180  09FA               	comf	___awdiv@dividend+1,f
  2099     0181  0AF9               	incf	___awdiv@dividend,f
  2100     0182  1903               	skipnz
  2101     0183  0AFA               	incf	___awdiv@dividend+1,f
  2102     0184                     i1l1098:
  2103     0184  3001               	movlw	1
  2104     0185  00FB               	movwf	??___awdiv
  2105     0186  087B               	movf	??___awdiv,w
  2106     0187  06A1               	xorwf	___awdiv@sign,f
  2107     0188                     i1l1100:
  2108     0188  01A2               	clrf	___awdiv@quotient
  2109     0189  01A3               	clrf	___awdiv@quotient+1
  2110     018A                     i1l1102:
  2111     018A  0877               	movf	___awdiv@divisor,w
  2112     018B  0478               	iorwf	___awdiv@divisor+1,w
  2113     018C  1903               	btfsc	3,2
  2114     018D  298F               	goto	u34_21
  2115     018E  2990               	goto	u34_20
  2116     018F                     u34_21:
  2117     018F  29C7               	goto	i1l1122
  2118     0190                     u34_20:
  2119     0190                     i1l1104:
  2120     0190  01A0               	clrf	___awdiv@counter
  2121     0191  0AA0               	incf	___awdiv@counter,f
  2122     0192  299E               	goto	i1l1110
  2123     0193                     i1l1106:
  2124     0193  3001               	movlw	1
  2125     0194                     u35_25:
  2126     0194  1003               	clrc
  2127     0195  0DF7               	rlf	___awdiv@divisor,f
  2128     0196  0DF8               	rlf	___awdiv@divisor+1,f
  2129     0197  3EFF               	addlw	-1
  2130     0198  1D03               	skipz
  2131     0199  2994               	goto	u35_25
  2132     019A                     i1l1108:
  2133     019A  3001               	movlw	1
  2134     019B  00FB               	movwf	??___awdiv
  2135     019C  087B               	movf	??___awdiv,w
  2136     019D  07A0               	addwf	___awdiv@counter,f
  2137     019E                     i1l1110:
  2138     019E  1FF8               	btfss	___awdiv@divisor+1,7
  2139     019F  29A1               	goto	u36_21
  2140     01A0  29A2               	goto	u36_20
  2141     01A1                     u36_21:
  2142     01A1  2993               	goto	i1l1106
  2143     01A2                     u36_20:
  2144     01A2                     i1l1112:
  2145     01A2  3001               	movlw	1
  2146     01A3                     u37_25:
  2147     01A3  1003               	clrc
  2148     01A4  0DA2               	rlf	___awdiv@quotient,f
  2149     01A5  0DA3               	rlf	___awdiv@quotient+1,f
  2150     01A6  3EFF               	addlw	-1
  2151     01A7  1D03               	skipz
  2152     01A8  29A3               	goto	u37_25
  2153     01A9  0878               	movf	___awdiv@divisor+1,w
  2154     01AA  027A               	subwf	___awdiv@dividend+1,w
  2155     01AB  1D03               	skipz
  2156     01AC  29AF               	goto	u38_25
  2157     01AD  0877               	movf	___awdiv@divisor,w
  2158     01AE  0279               	subwf	___awdiv@dividend,w
  2159     01AF                     u38_25:
  2160     01AF  1C03               	skipc
  2161     01B0  29B2               	goto	u38_21
  2162     01B1  29B3               	goto	u38_20
  2163     01B2                     u38_21:
  2164     01B2  29BA               	goto	i1l1118
  2165     01B3                     u38_20:
  2166     01B3                     i1l1114:
  2167     01B3  0877               	movf	___awdiv@divisor,w
  2168     01B4  02F9               	subwf	___awdiv@dividend,f
  2169     01B5  0878               	movf	___awdiv@divisor+1,w
  2170     01B6  1C03               	skipc
  2171     01B7  03FA               	decf	___awdiv@dividend+1,f
  2172     01B8  02FA               	subwf	___awdiv@dividend+1,f
  2173     01B9                     i1l1116:
  2174     01B9  1422               	bsf	___awdiv@quotient,0
  2175     01BA                     i1l1118:
  2176     01BA  3001               	movlw	1
  2177     01BB                     u39_25:
  2178     01BB  1003               	clrc
  2179     01BC  0CF8               	rrf	___awdiv@divisor+1,f
  2180     01BD  0CF7               	rrf	___awdiv@divisor,f
  2181     01BE  3EFF               	addlw	-1
  2182     01BF  1D03               	skipz
  2183     01C0  29BB               	goto	u39_25
  2184     01C1                     i1l1120:
  2185     01C1  3001               	movlw	1
  2186     01C2  02A0               	subwf	___awdiv@counter,f
  2187     01C3  1D03               	btfss	3,2
  2188     01C4  29C6               	goto	u40_21
  2189     01C5  29C7               	goto	u40_20
  2190     01C6                     u40_21:
  2191     01C6  29A2               	goto	i1l1112
  2192     01C7                     u40_20:
  2193     01C7                     i1l1122:
  2194     01C7  0821               	movf	___awdiv@sign,w
  2195     01C8  1903               	btfsc	3,2
  2196     01C9  29CB               	goto	u41_21
  2197     01CA  29CC               	goto	u41_20
  2198     01CB                     u41_21:
  2199     01CB  29D1               	goto	i1l1126
  2200     01CC                     u41_20:
  2201     01CC                     i1l1124:
  2202     01CC  09A2               	comf	___awdiv@quotient,f
  2203     01CD  09A3               	comf	___awdiv@quotient+1,f
  2204     01CE  0AA2               	incf	___awdiv@quotient,f
  2205     01CF  1903               	skipnz
  2206     01D0  0AA3               	incf	___awdiv@quotient+1,f
  2207     01D1                     i1l1126:
  2208     01D1  0823               	movf	___awdiv@quotient+1,w
  2209     01D2  00F8               	movwf	?___awdiv+1
  2210     01D3  0822               	movf	___awdiv@quotient,w
  2211     01D4  00F7               	movwf	?___awdiv
  2212     01D5                     i1l357:
  2213     01D5  0008               	return
  2214     01D6                     __end_of___awdiv:
  2215     007E                     btemp	set	126	;btemp
  2216     007E                     wtemp0	set	126
  2217                           
  2218                           	psect	idloc
  2219                           
  2220                           ;Config register IDLOC0 @ 0x2000
  2221                           ;	unspecified, using default values
  2222     2000                     	org	8192
  2223     2000  3FFF               	dw	16383
  2224                           
  2225                           ;Config register IDLOC1 @ 0x2001
  2226                           ;	unspecified, using default values
  2227     2001                     	org	8193
  2228     2001  3FFF               	dw	16383
  2229                           
  2230                           ;Config register IDLOC2 @ 0x2002
  2231                           ;	unspecified, using default values
  2232     2002                     	org	8194
  2233     2002  3FFF               	dw	16383
  2234                           
  2235                           ;Config register IDLOC3 @ 0x2003
  2236                           ;	unspecified, using default values
  2237     2003                     	org	8195
  2238     2003  3FFF               	dw	16383
  2239                           
  2240                           	psect	config
  2241                           
  2242                           ;Config register CONFIG1 @ 0x2007
  2243                           ;	Oscillator Selection bits
  2244                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2245                           ;	Watchdog Timer Enable bit
  2246                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2247                           ;	Power-up Timer Enable bit
  2248                           ;	PWRTE = OFF, PWRT disabled
  2249                           ;	RE3/MCLR pin function select bit
  2250                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2251                           ;	Code Protection bit
  2252                           ;	CP = OFF, Program memory code protection is disabled
  2253                           ;	Data Code Protection bit
  2254                           ;	CPD = OFF, Data memory code protection is disabled
  2255                           ;	Brown Out Reset Selection bits
  2256                           ;	BOREN = OFF, BOR disabled
  2257                           ;	Internal External Switchover bit
  2258                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2259                           ;	Fail-Safe Clock Monitor Enabled bit
  2260                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2261                           ;	Low Voltage Programming Enable bit
  2262                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2263                           ;	In-Circuit Debugger Mode bit
  2264                           ;	DEBUG = 0x1, unprogramme  2265     2007                     	org	8199
  2266     2007  20D4               	dw	8404
  2267                           
  2268                           ;Config register CONFIG2 @ 0x2008
  2269                           ;	Brown-out Reset Selection bit
  2270                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2271                           ;	Flash Program Memory Self Write Enable bits
  2272                           ;	WRT = OFF, Write protection off
  2273     2008                     	org	8200
  2274     2008  3FFF               	dw	16383

Data Sizes:
    Strings     72
    Constant    12
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     29      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@txt	PTR unsigned char  size(1) Largest target is 27
		 -> STR_3(CODE[27]), STR_2(CODE[23]), STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _asciiCDU->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    _isr->_asciiCDU
    _asciiCDU->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     235
                                             27 BANK0      2     2      0
                             _cadena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               7     7      0     235
                                             20 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1976
                                             14 BANK0      6     6      0
                           _asciiCDU
                           i1_cadena
 ---------------------------------------------------------------------------------
 (4) i1_cadena                                             7     7      0     136
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (3) _asciiCDU                                            10     8      2    1840
                                              4 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                           _asciiNUM
 ---------------------------------------------------------------------------------
 (4) _asciiNUM                                             2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _setup

 _isr (ROOT)
   _asciiCDU
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _asciiNUM
   i1_cadena

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      25       5       46.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 19 17:55:13 2023

                      _c 0041                        _d 003F                        _u 003D  
                      _y 007C                        pc 0002                       l90 037A  
                     l99 03C1             ___awdiv@sign 0021                       fsr 0004  
                    u510 0394                      u511 0393                      u520 03C1  
                    u600 02FB                      u521 03C0                      u601 02FA  
                    u610 0301                      u611 0300                      u620 031F  
                    u525 03BD                      u621 031E                      u637 02F0  
                    u647 0325                      u657 0356                      u667 039D  
                    _isr 002D                      fsr0 0004             ___awmod@sign 0076  
                   l1200 033D                     l1210 0347                     l1202 0343  
                   l1220 035B                     l1212 034D                     l1204 0344  
                   l1230 0367                     l1222 035C                     l1214 0351  
                   l1206 0345                     l1310 02E5                     l1240 0372  
                   l1232 0368                     l1224 035F                     l1216 0352  
                   l1208 0346                     l1320 0307                     l1312 02EA  
                   l1242 0375                     l1234 0369                     l1226 0363  
                   l1218 0358                     l1330 031F                     l1322 030B  
                   l1314 02F5                     l1180 0381                     l1244 0378  
                   l1236 036C                     l1228 0364                     l1332 0329  
                   l1324 0315                     l1316 02FB                     l1190 03AD  
                   l1182 0387                     l1246 0379                     l1238 036F  
                   l1318 0301                     l1326 0317                     l1192 03B3  
                   l1184 0394                     l1328 031B                     l1186 0397  
                   l1178 037E                     l1194 0330                     l1188 03A2  
                   l1196 0334                     l1198 0335                     _ADIF 0066  
                   ?_isr 0070                     STR_1 0276                     STR_2 025F  
                   STR_3 0244                     _RCIF 0065                     i1l72 00AE  
                   i1l76 00D9                     i1l99 0404                     _data 0238  
                   _cont 0043                     _main 02E5                     btemp 007E  
            i1cadena@txt 0072                     start 0012                    ??_isr 002E  
                  ?_main 0070          __end_of___awdiv 01D6          __end_of___awmod 02E5  
                  _ANSEL 0188          ___awdiv@divisor 0077                    i1l102 016C  
                  i1l107 0231                    i1l370 02E4                    i1l357 01D5  
        ___awdiv@counter 0020                    _RCREG 001A                    u40_20 01C7  
                  u32_20 0174                    u40_21 01C6                    u32_21 0173  
                  u41_20 01CC                    u33_20 017F                    u41_21 01CB  
                  u33_21 017E                    u34_20 0190                    u50_20 02DB  
                  u42_20 0291                    u34_21 018F                    u50_21 02DA  
                  u42_21 0290                    _SPBRG 0099                    u43_20 029C  
                  u43_21 029B                    _PORTB 0006                    u35_25 0194  
                  u36_20 01A2                    u44_20 02A7                    u36_21 01A1  
                  u44_21 02A6                    u53_20 03D9                    u53_21 03D8  
                  u37_25 01A3                    u45_25 02AB                    u38_20 01B3  
                  u46_20 02B9                    u54_20 0404                    u38_21 01B2  
                  u46_21 02B8                    u54_21 0403                    u38_25 01AF  
                  u54_25 0400                    u70_27 0075                    u47_20 02C3  
                  u55_20 0031                    u47_21 02C2                    u55_21 0030  
                  u39_25 01BB                    u47_25 02BF                    u71_27 0084  
                  u56_20 0039                    u56_21 0038                    u48_25 02CA  
                  u72_27 009F                    u49_20 02D6                    u57_20 0099  
                  u49_21 02D5                    u57_21 0098                    _TRISA 0085  
                  _TRISB 0086                    u73_27 00BE                    u58_20 00B4  
                  u58_21 00B3                    u74_27 03E0                    u59_20 00D1  
                  u59_21 00D0                    u67_27 003F                    u68_27 0057  
                  u69_27 0066                    _TXREG 0019                    _setup 0330  
                  pclath 000A         __end_ofi1_cadena 0405                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_data 0244  
           __end_of_main 0330                   ??_main 003B                   _ADRESH 001E  
       ___awdiv@dividend 0079                   ?_setup 0070                   _ANSELH 0189  
        asciiCDU@decenas 0028                   i1l1100 0188                   i1l1110 019E  
                 i1l1102 018A                   i1l1120 01C1                   i1l1112 01A2  
                 i1l1104 0190                   i1l1032 01D6                   i1l1114 01B3  
                 i1l1106 0193                   i1l1122 01C7                   i1l1130 028C  
                 i1l1050 01EB                   i1l1042 01E1                   i1l1034 01D7  
                 i1l1124 01CC                   i1l1116 01B9                   i1l1108 019A  
                 i1l1140 029C                   i1l1132 028D                   i1l1300 00A8  
                 i1l1126 01D1                   i1l1118 01BA                   i1l1150 02B5  
                 i1l1142 02A1                   i1l1134 0291                   i1l1070 0204  
                 i1l1062 01FA                   i1l1054 01F0                   i1l1046 01E6  
                 i1l1038 01DC                   i1l1302 00B4                   i1l1152 02B9  
                 i1l1144 02A7                   i1l1160 02D6                   i1l1136 0296  
                 i1l1080 020C                   i1l1304 00CD                   i1l1090 0174  
                 i1l1162 02DB                   i1l1154 02C3                   i1l1146 02AA  
                 i1l1138 0298                   i1l1074 0209                   i1l1066 01FF  
                 i1l1058 01F5                   i1l1170 013F                   i1l1250 03C3  
                 i1l1306 00D1                   i1l1092 0179                   i1l1164 02E0  
                 i1l1156 02C9                   i1l1148 02B1                   i1l1172 014E  
                 i1l1260 03E5                   i1l1252 03C6                   i1l1308 00D8  
                 i1l1094 017B                   i1l1086 016D                   i1l1158 02D0  
                 i1l1174 015D                   i1l1262 03F0                   i1l1254 03CC  
                 i1l1270 0033                   i1l1096 017F                   i1l1088 0170  
                 i1l1168 00E4                   i1l1264 03F6                   i1l1256 03D9  
                 i1l1280 0060                   i1l1272 0039                   i1l1098 0184  
                 i1l1354 0211                   i1l1258 03DC                   i1l1290 0089  
                 i1l1282 006B                   i1l1274 0048                   i1l1266 002D  
                 i1l1292 008D                   i1l1284 006F                   i1l1276 0051  
                 i1l1268 0031                   i1l1294 008F                   i1l1286 007A  
                 i1l1278 005C                   i1l1288 007E                   i1l1296 0093  
                 i1l1298 0099                   _SPBRGH 009A         __end_of_asciiCDU 016D  
       __end_of_asciiNUM 0232                   _cadena 037B                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075            i1cadena@cont0 0073                   saved_w 007E  
__end_of__initialization 0029           __pcstackCOMMON 0070             __pidataBANK0 0405  
          __end_of_setup 037B                ?i1_cadena 0070                  ??_setup 0034  
           _asciiCDU$998 002C               __pbssBANK0 003D               __pmaintext 02E5  
                ?_cadena 0070               __pintentry 0004               ??i1_cadena 0070  
       asciiCDU@centenas 0026                ?_asciiCDU 0024                ?_asciiNUM 0070  
             __stringtab 0232         asciiCDU@unidades 002A                  ___awdiv 016D  
                ___awmod 028C                  cadena@i 0038                  __ptext1 0330  
                __ptext2 037B                  __ptext3 002D                  __ptext4 03C2  
                __ptext5 00E4                  __ptext6 01D6                  __ptext7 028C  
                __ptext8 016D         ___awmod@dividend 0072               ??_asciiCDU 007C  
             ??_asciiNUM 0072     end_of_initialization 0029                _RCSTAbits 0018  
              i1cadena@i 0075                _TXSTAbits 0098           __end_of_cadena 03C2  
            _BAUDCTLbits 0187      start_initialization 0015              __end_of_isr 00E4  
               ??_cadena 0034              __pdataBANK0 0043              __pbssCOMMON 007C  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0077  
               ?___awmod 0070                cadena@txt 003A                __pstrings 0232  
            cadena@cont0 0036        interrupt_function 0004                asciiCDU@x 0024  
               _PIE1bits 008C                asciiNUM@a 0070                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 0237               _ADCON1bits 009F  
               i1_cadena 03C2       __end_of__stringtab 0238                 _asciiCDU 00E4  
               _asciiNUM 01D6               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0232               _OSCCONbits 008F                 stringdir 0232  
               stringtab 0232  
